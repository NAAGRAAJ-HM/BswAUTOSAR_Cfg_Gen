#pragma once
/******************************************************************************/
/* File   : CfgNvM.hpp                                                        */
/* Author : NAGARAJA HM (c) since 1982. All rights reserved.                  */
/******************************************************************************/

/******************************************************************************/
/* #INCLUDES                                                                  */
/******************************************************************************/
#include "CfgModule.hpp"
#include "CompilerCfg_CfgNvM.hpp"

/******************************************************************************/
/* #DEFINES                                                                   */
/******************************************************************************/
#define CFGNVM_AR_RELEASE_VERSION_MAJOR                                        4
#define CFGNVM_AR_RELEASE_VERSION_MINOR                                        3
#define NvM_DevErrorDetect                                        DevErrorDetect
#define NvM_InitCheck                                                     STD_ON

/******************************************************************************/
/* MACROS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* TYPEDEFS                                                                   */
/******************************************************************************/
typedef enum{
      eResultRequest_Ok = 0
   ,  eResultRequest_NotOk
   ,  eResultRequest_Pending
   ,  eResultRequest_FailedIntegrity
   ,  eResultRequest_BlockSkipped
   ,  eResultRequest_InvalidatedNv
   ,  eResultRequest_Cancled
   ,  eResultRequest_FailedRedundancy
   ,  eResultRequest_RestoredFromRom
}TypeResultRequest;

typedef uint16 TypeIdBlock;

class CfgNvM_Type:
      public CfgModule_TypeAbstract
{
   public:
      const CfgModule_TypeAbstract* gaptrListCfg[54];
};

/******************************************************************************/
/* CONSTS                                                                     */
/******************************************************************************/

/******************************************************************************/
/* PARAMS                                                                     */
/******************************************************************************/
extern CONST(CfgNvM_Type, CFGNVM_CONFIG_DATA) PBcfgNvM;

/******************************************************************************/
/* OBJECTS                                                                    */
/******************************************************************************/

/******************************************************************************/
/* FUNCTIONS                                                                  */
/******************************************************************************/

/******************************************************************************/
/* EOF                                                                        */
/******************************************************************************/

